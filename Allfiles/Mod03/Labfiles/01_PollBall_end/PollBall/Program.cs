using PollBall.Services;

var builder = WebApplication.CreateBuilder(args);
builder.Services.AddSingleton<IPollResultsService, PollResultsService>();
builder.Services.AddControllersWithViews();

var app = builder.Build();

IPollResultsService pollResults = app.Services.GetRequiredService<IPollResultsService>();
 
app.Use(async (context, next) =>
{
    if (context.Request.Query.ContainsKey("favorite"))
    {
        string selectedValue = context.Request.Query["favorite"];
        SelectedGame selectedGame = (SelectedGame)Enum.Parse(typeof(SelectedGame), selectedValue, true);
        pollResults.AddVote(selectedGame);

        context.Response.Headers.Add("content-type", "text/html");
        await context.Response.WriteAsync("Thank you for submitting the poll. You may look at the poll results <a href='/?submitted=true'>Here</a>.");
    }
    else
    {
        await next.Invoke();
    }
});

app.UseStaticFiles();

app.UseRouting();

//All 4 are equivalent:

//1.
//app.UseEndpoints(endpoints =>
//{
//    endpoints.MapControllerRoute(
//        name: "default",
//        pattern: "{controller=Home}/{action=Index}/{id?}");
//});

//2.
//app.UseEndpoints(endpoints =>
//{
//    endpoints.MapDefaultControllerRoute();
//});

//3.
//app.MapControllerRoute(
//    name: "default",
//    pattern: "{controller=Home}/{action=Index}/{id?}");

//4.
//app.MapDefaultControllerRoute();
  app.MapDefaultControllerRoute();


// app.Run(async (context) =>
// {
//     await context.Response.WriteAsync("This text was generated by the middleware. wwwroot folder path: " + app.Environment.WebRootPath);
// });

app.Run();
